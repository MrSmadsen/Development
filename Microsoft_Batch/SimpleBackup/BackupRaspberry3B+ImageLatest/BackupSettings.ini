# Version and Github_upload date: 2.2.6 (05-04-2021)
# Author/Developer: SÃ¸ren Madsen
# Github url: https://github.com/MrSmadsen/Development/tree/main/Microsoft_Batch/SimpleBackup
# Desciption: This is a Microsoft Batch script to automate backup and archive functionality
#             provided by standard archiving programs such as 7zip.
#             It has been developed for my personal setup and my own use case.
# Documentation: Checkout the file: Howto_Description.pdf
# Test_Disclaimer: This script has been tested on: Microsoft Windows 10 64bit home (Danish).
#                  Feel free to use this script/software at your own risk.
# File Encoding: utf-8

#All variables must be initializes or the script will not work. All varItem=VALUE must be set.

###################### General settings #
# Target location for the backup.
varBackupLocation=D:\path\LATEST_IMAGE

# Target location for the backup-sync folder.
varSyncFolderLocation=D:\path\LATEST_IMAGE\SyncFolder

# List file
varFileList=Backup.txt

###################### Application functions #
# Backup files into archive-file. (YES | NO)
varAppFunctionBackupFiles=YES

# Test archive integrity. (YES | NO)
varAppFunctionIntegrityCheck=NO

# Backup files into archive-file. (YES | NO)
varAppFunctionUpdateArchive=NO

# Backup files into archive-file. (YES | NO)
varAppFunctionExtractFilestoFolder=NO

# Backup files into archive-file. (YES | NO)
varAppFunctionExtractFilesWithFullFilePath=NO

# Verify the SHA512 checksum/checksums for an existing archive/Split file archive.
varAppFunctionVerifyChecksum=NO

# Synchronize backup-folders. (YES_PURGE_DST | YES | NO)
# YES_PURGE_DST: This option will clean up files in the destination folder that aren't also located in the source folder.
# YES:           This option will sync files from source to destination without cleaning/purging. No files will be deleted in the destination folder.
# NO:            Option disabled.
varAppFunctionSyncBackupFolder=NO

###################### Existing archive - Integrity test, update, extraction #
#  Path to folder that contains the archive to use.
varExistingArchivePath=E:\Backup\BackupFolder\Date

# Name of the file.
varExistingArchiveFileName=FileName.Extension

# Name of the file.
varExistingChecksumFile=FileName.Extension

# Target location for the extracted files and folders. DEFAULT_LOCATION == varExistingArchivePath\ExtractedArchiveContent
# Value can be either DEFAULT_LOCATION or a path to a filesystem destination.
varExtractionLocation=C:\test\Extract

###################### Advanced settings #
# Set password (YES | NO)
varPassword=NO

# Password, If a password is defined in this option the script will automatically add this to the archive if varPassword=NO
# That way there is no need to input a password when the script is running. The password is visible in clear text in this file though.
# Default value: YES, DO NOT USE SPACES ONLY.
varSecretPassword=NO

# Create volumes, split archive into chunks (YES | NO) - 7Zip documntation: -v{Size}[b|k|m|g] : Create volumes
varSplitArchiveFile=NO

# Enable logging. (YES | NO)
varEnableFileLogging=YES

# Generate a self-extracting archive - sfx archive. (YES | NO)
varGenerateSfxArchive=NO

# Settings for moving folders before backup and moving them back afterwards.
# To add more folders: Update backup.cmd->:MoveMultipleFolders and :MoveMultipleFoldersBack. Possibly also backup.cmd->PreconditionalChecks
varMoveFolders=NO
varMoveFoldersBack=NO
varSrcPathFolder01=D:\test\Source\TestFolder\
varSrcPathFolder02=D:\test\Source\TestFolder2\
varDstPathFolder01=D:\test\Destination\TestFolder\
varDstPathFolder02=D:\test\Destination\TestFolder2\

# Overwrite existing files. This is used by extract functions.
# Values: OVERWRITE_EXISTING_FILES, SKIP__EXISTING_FILES, AUTO_RENAME_EXTRACTING_FILE, AUTO_RENAME_EXISTING_FILE
varOverWriteFiles=SKIP__EXISTING_FILES

# UNTESTED: 7zip supports update flags that define how 7zip handles file updates in varying scenarios.
# Values: DEFAULT_FUNCTIONALITY (Same as using no flags), https://sevenzip.osdn.jp/chm/cmdline/switches/update.htm
# If a none default value is used the value in the ini-file is directly copied to the 7z.exe statement. No intermediate parsing.
# varUpdateMode=DEFAULT_FUNCTIONALITY

# Enable UTC mode for zip archives in backup and update mode. This is highly recommended if using UTC based file systems like NTFS
# and the file is being sent to another time zone.  (YES | NO)
varZipUtcMode=NO

# Enable integrityTest - varAppFunctionBackupFiles, varAppFunctionUpdateArchive, varAppFunctionExtractFilestoFolder or varAppFunctionExtractFilesWithFullFilePath. (YES | NO)
varIntegrityTest=NO

# Enable  checksum verification - varAppFunctionBackupFiles, varAppFunctionUpdateArchive, varAppFunctionExtractFilestoFolder or varAppFunctionExtractFilesWithFullFilePath. (YES | NO)
varChecksumVerification=NO

# SHA checksum bitlength
# Values supported by certutil v10.0.19041.1 on Microsoft Windows 10 20H2: (MD2 | MD4 | MD5 | SHA1 | SHA256 | SHA384 | SHA512)
# Default value is SHA512. Choosing a lower bitlength increases the probability of a checksum collision (different files having the same checksum value),
# but it decreases the checksum generation time.
varChecksumBitlength=SHA512

# Include backup synchronization to external storage. (YES_PURGE_DST | YES | NO)
# YES_PURGE_DST: This option will clean up files in the destination folder that aren't also located in the source folder.
# YES:           This option will sync files from source to destination without cleaning/purging. No files will be deleted in the destination folder.
# NO:            Option disabled.
varBackupSynchronization=NO

# Delete old backup folders. (YES | NO)
varDeleteOldBackupFolders=NO

###################### Subversion: Options, paths and settings #
# This script can handle subversion repositories. Use the options and settings in this section to configure this functionality.
# The script is hardcoded to handle 2 respositories and svn checkouts. Other user requirements will demand script update.

# This function is used to verify the svn state of the working copy before performing critical functions like calculating checksums etc.
# Values: (YES | NO)
varCheckWorkingCopyChanges=YES

# Path to the svn working copy of SimpleBackup
varSimpleBackupCheckoutPath=C:\workingcopyPath

# Repository export: Export svn repository (YES | NO)
varExportSvn=NO

# Repository export: Svn repository location
varRepositoryLocation=D:\folder1

# Repository dump location: Where to store the repository dump files
varRepositoryDumpLocation=D:\folder2

# Repository export: Svn repository 1:
varSvnRepo1=repo1

# Repository export: Repository export: Svn repository 2:
varSvnRepo2=repo2

###################### Robocopy specific settings #
# The DCOPY and COPY flags determine how and what robocopy moves/copies/syncs to the destination.
# /DCOPY sets up up the flags for directory management, /COPY sets up the flags for file management.
# Default is: /DCOPY:DA, /COPY:DA
# DATSOU: Data, Attributes, Time stamps, NTFS security ACL list, Owner information, Auditing information.
varSyncFolder_DCOPY_FLAGS=DA
varSyncFolder_COPY_FLAGS=DA

varMoveFolder_DCOPY_FLAGS=DA
varMoveFolder_COPY_FLAGS=DA

varCopyFolder_DCOPY_FLAGS=DA
varCopyFolder_COPY_FLAGS=DA

###################### 7zip specific settings #
# Backup format. This variable enables the usage of multiple format.
# The script is using 7zip.exe and this 7zip.exe supports both zip and 7z formats.
varFormat=zip
# varFormat=7z

# Compressionslvl 0 (copy mode), 1 (fast), 3, 5 (Normal), 7, 9 (Ultra)
varCompressionLvl=-mx5

# Number of used threads (-mmtN)
varThreadAffinity=-mmt10

# Solid Mode. This is a 7zip specific option. Default value is -ms=on.
# Solid archives cannot be updated. (YES | NO)
varSolidMode=NO

# VolumeSize, Chosen size options for this script: 1MB, 2MB, 5MB, 10MB, 100MB, 1GB, 2GB, 5GB, 10GB, 100GB
# 1MB = -v1m, 2MB = -v2m, 5MB = -v5m, 10MB = -v10m, 100MB = -v100m, 1GB = -v1g, 2MB = -v2g, 5GB = -v5g, 10GB = -v10g, 100GB = -v100g
varSplitVolumesize=-v1g

###################### Custom user variables  #
# Use 'mklink /J link targetfolder' to make a symbolink link to your folder
# if you have a folder with a space in the path before reaching the repository-root folder.
varRasperryPi3BPlusSha512Path=C:\Checksums\
varSvnWorkingCopy01=C:\repo1\
###########################################################################################################