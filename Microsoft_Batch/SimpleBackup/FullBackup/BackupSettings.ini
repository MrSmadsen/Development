# Version and Github_upload date: 1.0 (05-12-2020)
# Author/Developer: SÃ¸ren Madsen
# Github url: https://github.com/MrSmadsen/Development/tree/main/Microsoft_Batch/SimpleBackup
# Desciption: This is a Microsoft Batch script to automate backup and archive functionality
#             provided by standard archiving programs such as 7zip.
#             It has been developed for my personal setup and my own use case.
# Documentation: Checkout the file: Howto_Description.pdf
# Test_Disclaimer: This script has been tested on: Microsoft Windows 10 64bit home (Danish).
#                  Feel free to use this script/software at your own risk.
# File Encoding: utf-8

#All variables must be initializes or the script will not work. All varItem=VALUE must be set.
###################### General settings #
# Target location for the backup
varBackupLocation=E:\Backup\FullBackup

# List file
varFileList=Backup.txt

###################### Application functions #
# Backup files into archive-file. (YES | NO)
varAppFunctionBackupFiles=YES

# Test archive integrity. (YES | NO)
varAppFunctionIntegrityCheck=NO

# Backup files into archive-file. (YES | NO)
varAppFunctionUpdateArchive=NO

# Backup files into archive-file. (YES | NO)
varAppFunctionExtractFilestoFolder=NO

# Backup files into archive-file. (YES | NO)
varAppFunctionExtractFilesWithFullFilePath=NO

# Verify the SHA512 checksum/checksums for an existing archive/Split file archive.
varAppFunctionVerifyChecksum=NO

###################### Existing archive - Integrity test, update, extraction #
#  Path to folder that contains the archive to use.
varExistingArchivePath=<folderName>

# Name of the file.
varExistingArchiveFileName=<FileName>

# Name of the file.
varExistingChecksumFile=<folder\Filename>

# Target location for the extracted files and folders. DEFAULT_LOCATION == varExistingArchivePath\ExtractedArchiveContent
# Value can be either DEFAULT_LOCATION or a path to a filesystem destination.
varExtractionLocation=C:\test\Extract

###################### Advanced settings #
# Set password (YES | NO)
varPassword=YES

# Password, If a password is defined in this option the script will automatically add this to the archive if varPassword=YES.
# That way there is no need to input a password when the script is running. The password is visible in clear text in this file though.
# Default value: NO
varSecretPassword=backup_ylliylli

# Create volumes, split archive into chunks (YES | NO) - 7Zip documntation: -v{Size}[b|k|m|g] : Create volumes
varSplitArchiveFile=YES

# Enable logging
varEnableFileLogging=YES

# Settings for moving folders before backup and moving them back afterwards.
# To add more folders: Update backup.cmd->:MoveMultipleFolders and :MoveMultipleFoldersBack. Possibly also backup.cmd->PreconditionalChecks
varMoveFolders=NO
varMoveFoldersBack=NO
varSrcPathFolder01=D:\test\Source\TestFolder\
varSrcPathFolder02=D:\test\Source\TestFolder2\
varDstPathFolder01=D:\test\Destination\TestFolder\
varDstPathFolder02=D:\test\Destination\TestFolder2\

# Overwrite existing files. This is used by extract functions.
# Values: OVERWRITE_EXISTING_FILES, SKIP__EXISTING_FILES, AUTO_RENAME_EXTRACTING_FILE, AUTO_RENAME_EXISTING_FILE
varOverWriteFiles=SKIP__EXISTING_FILES

# UNTESTED: 7zip supports update flags that define how 7zip handles file updates in varying scenarios.
# Values: DEFAULT_FUNCTIONALITY (Same as using no flags), https://sevenzip.osdn.jp/chm/cmdline/switches/update.htm
# If a none default value is used the value in the ini-file is directly copied to the 7z.exe statement. No intermediate parsing.
# varUpdateMode=DEFAULT_FUNCTIONALITY

# Enable UTC mode for zip archives in backup and update mode. This is highly recommended if using UTC based file systems like NTFS
# and the file is being sent to another time zone.  (YES | NO)
varZipUtcMode=YES

# Enable SHA512 checksum verification during the backup process.
# This ensures that the calculated checksum is verified before the archive file is stored
# in persistent storage. Incorrect SHA512 generation might occur if the logging.cmd file is in an inconsistent state
# when storing the value. This is caused by the way the echo command is used because trailing whitespace might affect the calculated value.
# Values: (YES | NO)
varChecksumVerificationDuringBackup=NO

###################### Subversion: Options, paths and settings #
# This script can handle subversion repositories. Use the options and settings in this section to configure this functionality.
# The script is hardcoded to handle 2 respositories and svn checkouts. Other user requirements will demand script update.

# Repository export: Export svn repository (YES | NO)
varExportSvn=YES

# Repository export: Svn repository location
varRepositoryLocation=D:\Versioncontrol\VisualSVN Server\Repositories

# Repository dump location: Where to store the repository dump files
varRepositoryDumpLocation=D:\Brugere\smadsen\Repository_Backup\Svn_Dump

# Repository export: Svn repository 1:
varSvnRepo1=development

# Repository export: Repository export: Svn repository 2:
varSvnRepo2=documents

###################### 7zip specific settings #
# Backup format. This variable enables the usage of multiple format. Currently zip and 7z are the only supported formats
varFormat=zip
# varFormat=7z

# Include integrityTest after generating the backup archive. (YES | NO)
varIntegrityTestDuringBackup=NO

# Compressionslvl 0 (copy mode), 1 (fast), 3, 5 (Normal), 7, 9 (Ultra)
varCompressionLvl=-mx0

# Number of used threads (-mmtN)
varThreadAffinity=-mmt12

# Solid Mode. This is a 7zip specific option. Default value is -ms=on.
# Solid archives cannot be updated. (YES | NO)
varSolidMode=NO

# VolumeSize, Chosen size options for this script: 1MB, 2MB, 5MB, 10MB, 100MB, 1GB, 2GB, 5GB, 10GB, 100GB
# 1MB = -v1m, 2MB = -v2m, 5MB = -v5m, 10MB = -v10m, 100MB = -v100m, 1GB = -v1g, 2MB = -v2g, 5GB = -v5g, 10GB = -v10g, 100GB = -v100g
varSplitVolumesize=-v100g
###########################################################################################################